{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-29T09:17:15.963Z",
    "end": "2023-11-29T09:17:18.620Z",
    "duration": 2657,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a2ccbca-874f-4598-8a2c-77f9c5d553de",
      "title": "",
      "fullFile": "cypress\\e2e\\examples\\APITesting\\APIChaining_GoRestAPI.cy.js",
      "file": "cypress\\e2e\\examples\\APITesting\\APIChaining_GoRestAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1098a32-122e-4396-a454-98c11679cc54",
          "title": "Go Rest API chainig",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create, update,delete the resource",
              "fullTitle": "Go Rest API chainig create, update,delete the resource",
              "timedOut": null,
              "duration": 2398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://gorest.co.in/public/v2/users',\n  body: {\n    name: \"Arindam Das\",\n    gender: \"male\",\n    email: Math.random().toString(5) + \"@gmail.com\",\n    status: \"inactive\"\n  },\n  headers: {\n    Authorization: auth_Token\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  const userId = response.body.id;\n  //updating user request\n  cy.request({\n    method: 'PUT',\n    url: `https://gorest.co.in/public/v2/users/${userId}`,\n    body: {\n      name: \"Arindam\"\n    },\n    headers: {\n      Authorization: auth_Token\n    }\n  }).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body.name).to.equal(\"Arindam\");\n    //deleting user request\n    cy.request({\n      method: 'DELETE',\n      url: `https://gorest.co.in/public/v2/users/${userId}`,\n      headers: {\n        Authorization: auth_Token\n      }\n    }).then(response => {\n      expect(response.status).to.equal(204);\n    });\n  });\n});",
              "err": {},
              "uuid": "001f6f97-c99b-4f18-8e82-ec23a6219571",
              "parentUUID": "b1098a32-122e-4396-a454-98c11679cc54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "001f6f97-c99b-4f18-8e82-ec23a6219571"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}